{"version":3,"sources":["serviceWorker.js","utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","DataAreaContext","React","createContext","title","url","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","toLowerCase","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","data","Provider","value","event","filter","filteredList","item","indexOf","heading","sortedUsers","sort","a","b","localeCompare","length","Main","Wrapper","children","Header","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5f33c5e.chunk.js","sourcesContent":["// Code is optional to register serviceWorker\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n\r\n    window.location.hostname === '[::1]' ||\r\n\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          checkValidServiceWorker(swUrl, config);\r\n\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker.'\r\n            );\r\n          });\r\n        } else {\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed.'\r\n                );\r\n  \r\n                // callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({\r\n  title: \"\",\r\n  url: \"\"\r\n});\r\n\r\nexport default DataAreaContext;\r\n","import React, { useContext } from \"react\";\r\nimport \"./DataBody.css\"\r\nimport DataAreaContext from \"../../utils/DataAreaContext\"\r\n\r\nconst DataBody = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    function formatDate(date){\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate =[month, day, year].join(\"-\");\r\n        return formattedDate;\r\n    }\r\n    return (\r\n        <tbody>\r\n        {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n          context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n            return (\r\n              <tr key={login.uuid}>\r\n                <td data-th=\"Image\" className=\"align-middle\">\r\n                  <img\r\n                    src={picture.medium}\r\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                    className=\"img-responsive\"\r\n                  />\r\n                </td>\r\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                  {name.first} {name.last}\r\n                </td>\r\n                <td data-th=\"Phone\" className=\"align-middle\">\r\n                  {phone}\r\n                </td>\r\n                <td data-th=\"Email\" className=\"align-middle\">\r\n                  <a href={\"mailto:\" + email} target=\"__blank\">\r\n                    {email}\r\n                  </a>\r\n                </td>\r\n                <td data-th=\"DOB\" className=\"align-middle\">\r\n                  {formatDate(dob.date)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </tbody>\r\n    );\r\n  }\r\n  \r\n  export default DataBody;","import React, { useContext } from \"react\";\r\nimport DataBody from \"../DataBody\";\r\nimport \"./DataTable.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n\r\nconst DataTable = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n\r\n        <div className=\"datatable mt-5\">\r\n            <table\r\n                id=\"table\"\r\n                className=\"table table-striped table-hover table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        {context.developerState.headings.map(({ name, width }) => {\r\n                            return (\r\n                                <th\r\n                                    className=\"col\"\r\n                                    key={name}\r\n                                    style={{ width }}\r\n                                    onClick={() => {\r\n                                        context.handleSort(name.toLowerCase());\r\n                                    }}\r\n                                >\r\n                                    {name}\r\n                                    <span className=\"pointer\"></span>\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <DataBody />\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTable;","import React, { useContext } from \"react\";\r\nimport \"./SearchName.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n\r\nconst SearchName = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n        <div className=\"searchbox\">\r\n            <form className=\"form-inline\">\r\n                <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search for Employee\"\r\n                    aria-label=\"Search\"\r\n                    onChange={e => context.handleSearchChange(e)}\r\n                />\r\n                <button className=\"btn my-2 my-sm-0\" type=\"submit\">\r\n                    Search\r\n                 </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchName;","import React from 'react';\r\nimport SearchName from \"../SearchName\";\r\n\r\n\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n       <div className=\"search-area col-4\">\r\n        <SearchName />\r\n    </div>\r\n</nav>\r\n    );\r\n}\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n}\r\n","// import hooks from react\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DataTable from \"../DataTable\";\r\nimport Nav from \"../Nav\";\r\nimport API from \"../../utils/API\";\r\nimport \"./DataArea.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\"\r\n\r\nconst DataArea = () => {\r\n      const [developerState, setDeveloperState] = useState({\r\n        users: [],\r\n        order: \"ascend\",\r\n        filteredUsers: [],\r\n        headings: [\r\n          { name: \"Image\", width: \"10%\", },\r\n          { name: \"Name\", width: \"10%\", },\r\n          { name: \"Phone\", width: \"20%\", },\r\n          { name: \"Email\", width: \"20%\", },\r\n          { name: \"DOB\", width: \"10%\", }\r\n        ]\r\n      });\r\n    \r\n      const handleSort = heading => {\r\n        if (developerState.order === \"descend\") {\r\n            setDeveloperState({\r\n                order:\"ascend\"\r\n            });\r\n        } else{\r\n                setDeveloperState({\r\n                order:\"descend\"\r\n                 });\r\n        }\r\n    \r\n        const compareFnc = (a, b) => {\r\n          if (developerState.order === \"ascend\") {\r\n            if (a[heading] === undefined) {\r\n                return 1;\r\n            } else if (b[heading] === undefined) {\r\n                return -1;\r\n            } else if (heading === \"name\") {\r\n                return a[heading].first.localeCompare(b[heading].first);\r\n            } else {\r\n                return b[heading] - a[heading];\r\n            } \r\n          } else {\r\n        if (a[heading] === undefined){\r\n                return 1;\r\n        } else if (b[heading] === undefined){\r\n                return -1;\r\n        } else if (heading ===\"name\"){\r\n                return b[heading].first.localeCompare(a[heading].first);\r\n        } else {\r\n                return b[heading]-  a[heading];\r\n            }\r\n        }\r\n        }\r\n\r\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n\r\n        setDeveloperState({\r\n          ...developerState,\r\n          filteredUsers: sortedUsers\r\n        });\r\n\r\n        };\r\n   \r\n    const handleSearchChange = event => {\r\n        const filter = event.target.value;\r\n        const filteredList = developerState.users.filter(item => {\r\n          let values = item.name.first.toLowerCase();\r\n          return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n    \r\n        setDeveloperState({ \r\n        ...developerState, \r\n        filteredUsers: filteredList });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.getEmployees().then(results => {\r\n          setDeveloperState({\r\n            ...developerState,\r\n            users: results.data.results,\r\n            filteredUsers: results.data.results\r\n          });\r\n        });\r\n      }, []);\r\n    \r\n    return (\r\n        <DataAreaContext.Provider\r\n          value={{ developerState, handleSearchChange, handleSort }}\r\n        >\r\n          <Nav />\r\n          <div className=\"data-area\">\r\n            {developerState.filteredUsers.length > 0 \r\n    ? <DataTable />\r\n     : <div></div>\r\n     }\r\n          </div>\r\n        </DataAreaContext.Provider>\r\n      );\r\n    }\r\n    \r\n    export default DataArea;","import React from \"react\";\r\nimport DataArea from \"../DataArea/index.js\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main (){\r\n    return (\r\n        <>\r\n        <DataArea />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper ({ children }){\r\n    return (\r\n        <div className=\"wrapper\">\r\n            { children }\r\n        </div>\r\n    );\r\n}\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Employee Directory</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Main from './components/Main';\r\nimport Wrapper from './components/Wrapper';\r\nimport Header from './components/Header';\r\nimport \"./App.css\";\r\n  \r\nexport default function App() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper>\r\n            <Header />\r\n            <Main />\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n//change unregister() to register() below for offline function. \r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}